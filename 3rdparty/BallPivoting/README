README for program Ball Pivoting Algorithm

AUTHOR Julie Digne julie.digne@liris.cnrs.fr
VERSION 1.0


INTRODUCTION
This program performs triangular mesh reconstruction from a set of oriented 3D points given by their coordinates and oriented normals.
It is an implementation of the Ball Pivoting Algorithm (BPA) [Bernardini et al. 1999]. The main difference with the paper lies in the parallel approach taken here.
BPA is a very elegant and efficient reconstruction method that uses a ball
pivoting around triangle edges and adds new triangles if the ball is incident to three points and contains no other points.
See the paper for details and theoretical foundations of the BPA, see the paper on www.ipol.im for a detailed explanation of this precise parallel implementation, with timings and experiments.

PRE-REQUISITES
This program is a standalone C++ code which does not need linking against any external library.
It makes heavy use of the Standard Template Library (STL) and is parallelized using OpenMP, therefore both these tools should be installed.

DOCUMENTATION

The complete documentation (including this README as the main page of the documentation)
 of the code can be obtained by running doxygen in the BallPivoting folder (the folder
 containing the Doxyfile).

INSTALLATION
1 - unzip the archive
2 - cd BallPivoting
3 - in CMakeLists.txt set the path to g++ and/or clang (lines "CXX=")
    line 21: SET (CMAKE_CXX_COMPILER "/usr/bin/g++")
    line 26: SET (CMAKE_CXX_COMPILER "/usr/bin/clang++")
4 - mkdir build
5 - cd build
6 - cmake -DCMAKE_BUILD_TYPE=Release ..
7 - make

Note on the compilers:
If your system default compiler is g++, you can comment line 21.
The program was compiled both with g++4.4 and 4.7 on debian and ubuntu and
g++4.8 on MacOSX. The code can also be compiled with clang by using:
cmake option -DUSE_CLANG=ON . Yet in that case there will be no support for
OpenMP and thus no paralellism.


USAGE
A typical usage for this program is

ballpivoting -i \<input_file.txt\> -o \<output_file.ply\> -r \<radius\> -p
where:
 ** (-i) (mandatory) input_file.txt is a file containing the oriented points.
It should be formatted as a simple ascii file, with one point per line separated by tabulations
 x1 y1  z1  nx1 ny1 nz1
 x2 y2  z2  nx2 ny2 nz2
 ....
 xn yn  zn  nxn nyn nzn
 ** (-o) (mandatory) output_file.ply contains the output reconstructed surface.
The format is the Stanford PLY format (ascii).
 ** (-r) (recommended) a single radius or a list of radii that will be used
successively to reconstruct the surface
 successive radii should be given as "r1 r2 ... rn"
 ** (-d) Alternatively you can set an octree depth instead of a radius with the option -d
(bear in mind that excessive octree depths will cause memory swaps)
 ** (-p) (recommended) will perform the computation in parallel.

Example:

ballpivoting -i bunny_oriented.txt -o bunny_rec.ply -r "0.0003 0.0005 0.002" -p

COPYRIGHT

This project implements an algorithm possibly linked to the patent
US6968299B1.
This project is made available for the exclusive aim of serving as
scientific tool to verify the soundness and completeness of the
algorithm description. Compilation, execution and redistribution
of this file may violate patents rights in certain countries.
The situation being different for every country and changing
over time, it is your responsibility to determine which patent
rights restrictions apply to you before you compile, use,
modify, or redistribute this file. A patent lawyer is qualified
to make this determination.
If and only if they don't conflict with any patent terms, you
can benefit from the following license terms attached to this
file.
This program is free software: you can redistribute it and/or
modify it under the terms of the GNU General Public License as published
by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>
